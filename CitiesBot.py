import telebot

bot = telebot.TeleBot("1466138200:AAEucfxw9TTfL7S4pu13BfKR9uNGlna9b6A", parse_mode=None)
already_here = []
literals = []
last_answer_char = ''

with open('C:/Users/Вячеслав/PycharmProjects/TestWeatherBot/RussiaCities.txt') as inf:
    for line in inf:
        literals.append(line[0:1])

set_literals = set(literals)


string_kubok ="\n\n░░░░░░░░░░░░░░▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄░░░░░░░░░░░░\n░░░░░░░░░░▄▄▄▄████████████▀▀█▄▄▄▄░░░░░░░░\n░░░░░░░░░░█▄░░████████████░░█░░░█░░░░░░░░" \
                                          "\n░░░░░░░░░░░█░░████████████░▄█░░█░░░░░░░░░\n░░░░░░░░░░░░▀▄░██████████░░█░▄▀░░░░░░░░░░\n░░░░░░░░░░░░░░▀▀████████▀░█▀▀░░░░░░░░░░░░" \
                                          "\n░░░░░░░░▄░░░░░░░░▀█████▀▄▀░░░░░▄█▄░░░░░░░\n░░░░░░░▀█▀░░░░░░░░░▀███▀░░░░░░░░▀░░░░░░░░\n░░░░░░░░░░░░░░▄░░░░░░█░░░░░░░░░░░░░░░░░░░" \
                                          "\n░░░░░░░░░░░░░▀█▀░░░░░█░░░░░░░░░░░░░░░░░░░\n░░░░░░░░░░░░░░░░░░░░▄█▄░░░░░░░░░░░░░░░░░░\n░░░░░░░░░░░░░░░░░▄▄▄███▄▄▄░░░░░░░░░░░░░░░" \
                                          "\n░░░░░░░░░░░░░░▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄░░░░░░░░░░░░\n░░░░░░░░░░░░░░███████████████░░░░░░░░░░░░\n░░░░░░░░░░░░░░████▀▀▀▀▀▀▀████░░░░░░░░░░░░" \
                                          "\n░░░░░░░░░░░░░░███░░░░░░░░░███░░░░░░░░░░░░\n░░░░░░░░░░░░░░████▄▄▄▄▄▄▄████░░░░░░░░░░░░\n░░░░░░░░░░░░░░███████████████░░░░░░░░░░░░" \
                                          "\n░░░░░░░░░░░░▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄░░░░░░░░░░"

def linecheck(string, base):
    here = False
    tmp1 = string
    for i in range(len(base)):
        tmp2 = str(base[i])
        if tmp1.upper() == tmp2.upper():
            here = True
            return False
    if not here:
        return True


@bot.message_handler(commands=['start'])
def send_hello_and_rules(message):
    already_here = []
    last_answer_char = ''
    hello = "--------------------------------\n" \
            "Привет, хочу поиграть с тобой в города.\n" \
            "Правила такие:\n" \
            "Ты пишешь название города, я стараюсь тебе ответить названием города, " \
            "первая буква которого такая же, как и последняя буква твоего города. " \
            "Пожалуйста, избегай городов, оканчивающихся на 'ь','ы','ъ' и подобные. " \
            "Помни, что бот маленький и только учиться играть. " \
            "Есть некоторые ключевые слова. Посмотреть их ты можешь в любой момент, набрав '/kwords':\n" \
            "Давай начнем!\n" \
            "--------------------------------\n\n" \
            "Введи название города для начала игры:"
    bot.send_message(message.chat.id, hello)


@bot.message_handler(commands=['kwords'])
def send_hello_and_rules(message):
    hello = "--------------------------------\n" \
            "Ключевые слова:\n" \
            "'Были' - выведет все слова, которые в текущей сессии игры были задействованы.\n" \
            "'Закончить' - вы заканчиваете сессию и бот предложит начать заново.\n" \
            "'Напомни' - подсказывает букву, с которой должен начинаться город в ваш ход.\n" \
            "--------------------------------\n"
    bot.send_message(message.chat.id, hello)


@bot.message_handler(commands=['newgame'])
def send_hello_and_rules(message):
    already_here = []
    last_answer_char = ''
    hello = "------------НОВАЯ ИГРА----------\n" \
            "Правила такие:\n" \
            "Ты пишешь название города, я стараюсь тебе ответить названием города, " \
            "первая буква которого такая же, как и последняя буква твоего города. " \
            "Пожалуйста, избегай городов, оканчивающихся на 'ь','ы','ъ' и подобные. " \
            "Помни, что бот маленький и только учиться играть. " \
            "Давай начнем!\n" \
            "--------------------------------\n\n" \
            "Введи название города для начала игры:"
    bot.send_message(message.chat.id, hello)


@bot.message_handler(content_types=['text'])
def send_city(message):
    print(message.text)
    global already_here
    global last_answer_char
    check = True
    if message.text == "Слава+Катя=?":
        answer = "Мой создатель оставил сообщение для тебя\n\n" \
                 "Катя, я счастлив, что уже почти 2 года знаком с тобой," \
                 "и всем сердцем люблю тебя, родная\n" \
                 "─▄█▀█▄──▄███▄─\n▐█░██████████▌\n─██▒█████████─\n──▀████████▀──\n─────▀██▀─────"
    elif message.text == "DungeonMaster":
        answer = "Welcome to the python club, buddy. *ass slap\n" \
                 ".\n⠄⠄⠄⠄⠄⠄⢴⡶⣶⣶⣶⡒⣶⣶⣖⠢⡄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄\n⠄⠄⠄⠄⠄⠄⢠⣿⣋⣿⣿⣉⣿⣿⣯⣧⡰⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄\n⠄⠄⠄⠄⠄⠄⣿⣿⣹⣿⣿⣏⣿⣿⡗⣿⣿⠁⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄"\
                 "\n⠄⠄⠄⠄⠄⠄⠟⡛⣉⣭⣭⣭⠌⠛⡻⢿⣿⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄\n⠄⠄⠄⠄⠄⠄⠄⠄⣤⡌⣿⣷⣯⣭⣿⡆⣈⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄\n⠄⠄⠄⠄⠄⠄⠄⢻⣿⣿⣿⣿⣿⣿⣿⣷⢛⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄"\
                "\n⠄⠄⠄⠄⠄⠄⠄⠄⢻⣷⣽⣿⣿⣿⢿⠃⣼⣧⣀⠄⠄⠄⠄⠄⠄⠄⠄⠄\n⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⣛⣻⣿⠟⣀⡜⣻⢿⣿⣿⣶⣤⡀⠄⠄⠄⠄⠄\n⠄⠄⠄⠄⠄⠄⠄⠄⢠⣤⣀⣨⣥⣾⢟⣧⣿⠸⣿⣿⣿⣿⣿⣤⡀⠄⠄⠄\n" \
                 "⠄⠄⠄⠄⠄⠄⠄⠄⢟⣫⣯⡻⣋⣵⣟⡼⣛⠴⣫⣭⣽⣿⣷⣭⡻⣦⡀⠄\n⠄⠄⠄⠄⠄⠄⠄⢰⣿⣿⣿⢏⣽⣿⢋⣾⡟⢺⣿⣿⣿⣿⣿⣿⣷⢹⣷⠄\n⠄⠄⠄⠄⠄⠄⠄⣿⣿⣿⢣⣿⣿⣿⢸⣿⡇⣾⣿⠏⠉⣿⣿⣿⡇⣿⣿⡆\n" \
                 "⠄⠄⠄⠄⠄⠄⠄⣿⣿⣿⢸⣿⣿⣿⠸⣿⡇⣿⣿⡆⣼⣿⣿⣿⡇⣿⣿⡇\n⠄⠄⠄⠄⠄⠄⠄⠘⣿⣿⡘⣿⣿⣷⢀⣿⣷⣿⣿⡿⠿⢿⣿⣿⡇⣩⣿⡇\n⠄⠄⠄⠄⠄⠄⠄⠄⠄⢻⣷⠙⠛⠋⣿⣿⣿⣿⣿⣷⣶⣿⣿⣿⡇⣿⣿⡇\n "
    elif message.text == "Закончить":
        answer = "--------------------------\nСпасибо за игру. Вы лучший соперник за всю мою недолгую жизнь!\n" \
                 "Возвращайтесь, с удовольствием поиграем!"
        already_here = []
        last_answer_char = ''
    elif message.text == "Были":
        if len(already_here) == 0:
            answer = "Мы с вами пока не назвали ни одного города. Давайте скорее начнем!"
        else:
            answer = 'Вот список уже названных в нашей игре городов:\n'
            for i in range(len(already_here)):
                answer+= already_here[i] + '\n'

    elif message.text == "Напомни":
        if last_answer_char != '':
            answer = "Вам на букву {0}\n".format(last_answer_char.upper())
        else:
            answer = "Мы с вами пока не назвали ни одного города. Давайте скорее начнем!"
    else:
        if last_answer_char != '':
            temp = str(message.text[0:1])
            if last_answer_char.upper() != temp.upper():
                check = False
                answer = "Вы назвали город, не соответсвующий правилам нашей игры! Вам на букву {0}\n" \
                         "Введите название заново:".format(last_answer_char.upper())
        if check:
            """Для подобия разделения чатов можно запоминать message.chat.id и отправлять соотвесвующее сообщение только
                в этот конкретный чат с одним определенным пользователем"""
            """Для подобия интеллектуального анализа можно брать вводимую пользователем строку
                Дальше можно сделать алгоритм либо просто пробегом по списку городов и поиску того, который имелся ввиду
                Или включить подобие интеллектуального анализа СНАЧАЛА ЕГО В МАЛЕНЬКОЙ ПРОГЕ НА ПРИМЕРАХ ИСПЫТАть
                который будет смотреть и посимвольно сравнивать значения, можно сделать словарем
                с ключами по городу который возможно имелся ввиду, количеству совпавших букв в этом городе и строке введнной
                пользователем и ID присваиваемый этому значению, причем стараться рассматривать варианты где
                больше (длина-4) совпадений, иначе просто не записывать в массив возможных городов
                и выводить сообщение о том, что введенное слово нечитаемое"""
            S = message.text[len(message.text) - 1:len(message.text)]
            S = S.upper()
            with open('C:/Users/Вячеслав/PycharmProjects/TestWeatherBot/RussiaCities.txt') as inf:
                for line in inf:
                    if linecheck(message.text, already_here):
                        tmp = line[0:len(line) - 1]
                        if S not in set_literals:
                            answer = "Кажется мы попали в тупик, потому что я не знаю городов на " \
                                     "последнюю букву названного вами города. Вы заслуженно победили." + string_kubok
                            bot.send_message(message.chat.id, answer)
                            answer = "Сессия нашей игры закончена. Можете начать заново набрав команду '/newgame'"
                            break
                        else:
                            if line[0:1] == S and line != message.text and linecheck(tmp, already_here):
                                answer = line
                                last_answer_char = answer[len(answer)-2:-1]
                                already_here.append(answer[0:len(answer)-1])
                                already_here.append(message.text)
                                if last_answer_char.upper() not in set_literals:
                                    answer = answer + "\n Мне на ум пришёл первым этот город. Кажется он оканчивается" \
                                                      "на букву, на которую больше не осталось городов. Прошу " \
                                                      "прощения.\nДавайте на секунду закроем глаза на правила и в " \
                                                      "качестве исключения прошу вас назвать город, начинающийся на " \
                                                      "ту же букву, что и город, который назвал я (буква {0}).".format(answer[0:1])
                                    last_answer_char = answer[0:1]
                                break
                    else:
                        answer = "Вы назвали город, который уже был использован в текущей сессии игры!\n" \
                         "Введите название заново:"

    bot.send_message(message.chat.id, answer)


bot.polling(none_stop=True)
